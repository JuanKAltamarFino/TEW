Todo TEW_MDB:
1-	Create the python class to SetUp the configuration needed to the TEW2020 game DONE
	This means:
		1- Generate the Param file with the basic structurs DONE
			1.1- Calendar sheet
			1.2- Shows (Company,Show,ShowType,DayOfWeek,Week,Month,MaxMatches,Brand,ShowTime,PreShowTime,TimeMatch,TimeDarkMatch)
				1.2.1- This means we need to change GenerateMatches because we will not use TV Shows any more
			1.3- RosterDivition (Divition,Cant,MinPopularity,MaxPopularity,Type,Brand)
				1.3.1- This Sheet or DF is generated by the result of Divition (DarkCard,MidCard,PreCard) x TypeRosterByGender x Brand (This include None like all the roster)
			1.4- ConfMatchType (Match Type,Min,Max,MinP,MaxP) where match type is (Singles, Teams, Trios, Quartet, Quintet)
			1.5- General (SinceWeek,MDBFileRoute,CompanyInitials)
		2- Generate the Wrestling base file, this is the Roster file #May be this isn't necesary DONE
			2.1- Change the name of the file for each Class/Program
		3- Generate the Matches.xlsx file the the basic structure DONE
			3.1- Considere the type of possible matches (Singles, Teams, Trios, Quartet, Quintet) the last two only for Events
		4- Generate constants related with TypeRosterByGender (Singles(Female,Male),Teams(Female,Male,Mix),Trios(Female,Male,Mix))
		5- Generate the Angles base file. DONE (Week,Show,TypeAngle,SuggestedName,ExpectedMinutes,Workers,Scripted,RateOn,Storyline,Appears)
		6- Generate the Storylines file, this file is only for use of the user, none program read it or write it (Sheets:Development (CompanyName,Name,Gender),Storylines (Brand,Name,Rating,Until,Workers1,Workers2,Workers3,Workers4,Workers5,Workers6,Workers7,Workers8),Push (Wrestler,Amount of victories))	DONE	
2- Test what happend when try to run TEW_MDB with all the files empty DONE
	Traceback (most recent call last):
	  File "./TEW_MDB.py", line 1218, in <module>
		main()
	  File "./TEW_MDB.py", line 19, in main
		v_companyInitials=getCompanyInitials()
	  File "./TEW_MDB.py", line 108, in getCompanyInitials
		v_companyInitials=df_general['CompanyInitials'].head().item()
	  File "D:\Anaconda3\lib\site-packages\pandas\core\base.py", line 420, in item
		raise ValueError("can only convert an array of size 1 to a Python scalar")
	ValueError: can only convert an array of size 1 to a Python scalar
3- Store the routeFolder in the Config.json 	DONE
EN- Create a Class called Images to get all the images used to interact with the game.
4- Add to TEW_MDB a function to generate the tag teams when the roster file is empty(the first time) DONE
5- Fix the consult of wrestlers with other priorities DONE
6- Fix the calculation of wrestlersCantWrestlerShow DONE
FIX- Remade the PreBooking logic for search match type because there each letter is like a scroll down.
EN- Think in a way to reset the roster search before begin the check of the priority of wrestlers
7- Generate the proportion of participant per divition for each tvShowsType (A,B) something like B(DarkCard:70,MidCard:25,MainCard:5) and A(DarkCard:33,MidCard:33,MainCard:34) or only have two divition for B an 3 for A DONE
Fix Urgent - Discover if the TagTeams disappear in some way Read about pd.ExcelWriter to know in what moment close the file
8- Change the position of Roster Columns Name	Profile for RateOnPassive	RateOnActive and Gender with User
9- FIX the participants of a match can't be repeated DONE
10- Create the generator of angles based in your storylines
10.1- Modify TEW_MDB to read the Storylines we will create a file with the result
10.2- Modify TEW_MDB to update the file StoryLinesAndDevelopment and update Rating column with the heat value
10.2.1- If we don't have data in that file we must have to generate the file with the consulted information
10.3- Create GenerateAngles.py file
10.3.1- We will read StoryLinesAndDevelopment file (Until must have the same format that calendar YYYYMMW#)
10.3.2- We will read Roster only the Single
10.3.3- We read current week from Parameter.xlsx Calendar
10.3.4- We will read the StoryLines file generated by TEW_MDB to know the aligment of each Worker
10.3.5- We read the Staff.xlsx and take the Interviewers
10.4- Modify BasicConfigValues.json to include the Possible values for:
10.4.1- "TypeAngle":["Freestyle Angle"] 
10.4.2- "ExpectedMinutes":[4,5]
10.4.3- "Scripted":[true,false]
10.4.4- "RateOn":['RateOnCharisma','RateOnStarQuality','RateOnSexAppeal','RateOnMenace','RateOnOverness','RateOnMicrophone','RateOnFighting','RateOnEntertainment','RateOnSelling','RateOnActing']
10.4.4.1- Generate a conversi√≥n between RateOn Angles and the RateOn BookingAngles
10.4.4.1.1- RateOn BookingAngles removing the RateOn from the text
10.4.5- "Storyline":["Neutral","Minor Success","Success","Major Success","Defeat"]
10.4.6- "Appears":["On","Off"]
10.5- In the GenerateAngles.py
10.5.1- We iterate the StoryLinesAndDevelopment
10.5.1.1- If the StorylineName doesn't appear in the Angles.xlsx means is the first time
10.5.1.1.1- We will generate all the angles for this Storyline
10.5.1.1.1.1- The first time all the participants must be have the Appears in On
10.5.1.1.1.2- The week begins in the current week
10.5.1.1.1.3- Generate the weeks from the begins to the until week (Example 202301W1,202301W2,202301W3,202301W4,202302W1...202303W1)
10.5.1.1.1.4- Get the RateOnActive and RateOnPassive for each participant
Note: Considere if the Heat of the SL is greater than 75 no use an interviewer
Note2: When generate the angles we can't have a duplicate participant
Note3: In case all the participants can't participate in any of the A TV Shows we can considere one of the B shows depending of the contracts, but with only one that can participate is enough, the rest can be off
Note4: The program will try to intercalete the A shows in the Storiline (One week in one show the other week in another) this depends of the disponibility of the workers for that show
10.5.1.1.1.5- 
